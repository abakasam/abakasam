'use strict'

// Usage:
//
// wrap(http, 'createServer', function (createServer) {
//   return function (requestListener) {
//     return createServer(function (req, res) {
//       asyncState.req = req
//       requestListener.apply(this, arguments)
//     })
//   }
// })

module.exports = function (obj, objName, fnNames, generator) {
  if (!Array.isArray(fnNames)) fnNames = [fnNames]
  fnNames.forEach(function (fnName) {
    if (typeof obj[fnName] !== 'function') {
      // TODO: Use opbeat logger
      console.error('Could not wrap %s.%s (not a function)', objName, fnName)
      return
    }

    var orig = obj[fnName]
    if (orig.__unwrap_opbeat) {
      // TODO: Use opbeat logger
      console.error('The function %s.%s is already wrapped', objName, fnName)
      return
    }

    var wrapped = generator(orig) // .bind(obj))
    wrapped.__unwrap_opbeat = function () {
      obj[fnName] = orig
    }

    obj[fnName] = wrapped // .bind(obj)
  })
}
